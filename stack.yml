version: "3.9"

services:
  api_gateway:
    image: luis101590/api_gateway:latest  # Apunta a la imagen subida a Docker Hub
    ports:
      - "8082:3000"
    depends_on:
      - redis
      - rabbitmq
      - microservice_auth
      - microservice_cliente
      - microservice_pedido
    networks:
      - microservices_network
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
    env_file:
      - ./api_gateway/.env  # Ruta del archivo .env para api_gateway

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672" # Puerto para comunicación AMQP
      - "15672:15672" # Puerto para la interfaz de administración
    networks:
      - microservices_network
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest

  redis:
    image: redis:7.0
    ports:
      - "6379:6379"
    networks:
      - microservices_network

  microservice_almacen:
    image: luis101590/microservice_almacen:latest
    ports:
      - "5003:5003"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - microservices_network
    env_file:
      - ./microservice_almacen/.env

  microservice_ubicacion:
    image: luis101590/microservice_ubicacion:latest
    ports:
      - "5005:5005"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - microservices_network
    env_file:
      - ./microservice_ubicacion/.env

  microservice_pedido:
    image: luis101590/microservice_pedido:latest  # Apunta a la imagen subida a Docker Hub
    ports:
      - "5010:5010"
    deploy:
      replicas: 1 # Se definen 3 réplicas para este servicio
      restart_policy:
        condition: on-failure
    networks:
      - microservices_network
    env_file:
      - ./microservice_pedido/.env

  microservice_producto:
    image: luis101590/microservice_producto:latest  # Apunta a la imagen subida a Docker Hub
    ports:
      - "5004:5004"
    deploy:
      replicas: 1 # Se definen 3 réplicas para este servicio
      restart_policy:
        condition: on-failure
    networks:
      - microservices_network
    env_file:
      - ./microservice_producto/.env

  microservice_zonaproducto:
    image: luis101590/microservice_zonaproducto:latest  # Apunta a la imagen subida a Docker Hub
    ports:
      - "5006:5006"
    deploy:
      replicas: 1 # Se definen 3 réplicas para este servicio
      restart_policy:
        condition: on-failure
    networks:
      - microservices_network
    env_file:
      - ./microservice_zonaproducto/.env

  microservice_zonapromocion:
    image: luis101590/microservice_zonapromocion:latest  # Apunta a la imagen subida a Docker Hub
    ports:
      - "5007:5007"
    deploy:
      replicas: 1 # Se definen 3 réplicas para este servicio
      restart_policy:
        condition: on-failure
    networks:
      - microservices_network
    env_file:
      - ./microservice_zonapromocion/.env

  microservice_cliente:
    image: luis101590/microservice_cliente:latest  # Apunta a la imagen subida a Docker Hub
    ports:
      - "5002:5002"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - microservices_network
    env_file:
      - ./microservice_cliente/.env

  microservice_conductor:
    image: luis101590/microservice_conductor:latest  # Apunta a la imagen subida a Docker Hub
    ports:
      - "5009:5009"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - microservices_network
    env_file:
      - ./microservice_conductor/.env

  microservice_auth:
    image: luis101590/microservice_auth:latest  # Apunta a la imagen subida a Docker Hub
    ports:
      - "5001:5001" # HOST : CONTENEDOR -> También puede ser - 5004 para resumir, por la igualdad de puertos
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - microservices_network
    env_file:
      - ./microservice_auth/.env

networks:
  microservices_network:
    driver: overlay